{"version":3,"sources":["navbar.js","queries/queries.js","confirmUser.js","createUser.js","createUserApollo.js","allReceiptsSidebar.js","addReceipt.js","ReceiptsApollo.js","loginUserComp.js","loginApollo.js","mainPage.js","Routes.js","serviceWorker.js","index.js"],"names":["MyNav","react_default","a","createElement","className","href","id","Component","signUpUs","gql","_templateObject","submitCCodeMutation","_templateObject2","loginUs","_templateObject3","addReceiptMutation","_templateObject4","showAllReceipts","_templateObject5","ConfirmUs","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","validateCode","e","inputCode","document","getElementById","value","style","borderColor","sendCode","setState","error","preventDefault","submitMutation","variables","email","emailForCCode","confirmationCode","state","code","catch","err","alert","then","res","history","push","_this2","onSubmit","placeholder","type","onChange","target","onMouseOut","graphql","name","CreateUser","validateName","errorSpan","inputName","visibility","innerHTML","validateMail","inputMail","test","validateFname","inputFname","validatePass","inputPass","length","validatePass1","inputPass1","sendRegistration","createDamnUser","familyName","password","response","console","log","data","uuid","signUpDone","CCRender","confirmUser","itemName","client","ApolloClient","uri","CreateUserApollo","react_apollo_browser_umd","navbar","createUser","SideBar","showAllTitles","showReceipts","sortData","dataToSort","sort","b","Date","date","displayReceipts","myData","sortChecked","ListCurrentUserReceipts","loading","totalExp","monthsExp","d","setMonth","getMonth","forEach","price","map","index","key","onClick","displayClickedRes","ev","description","src","imageUrl","closeDescription","sortedData","checkSorting","checked","disabled","alt","htmlFor","CreateR","validateIname","validateIprice","inputPrice","validateUrl","strUrl","RegExp","inputUrl","getJWT","localStorage","getItem","submitReceiptForm","myDate","toISOString","substring","createReceipt","item_name","cost","parseInt","submitReceiptDone","window","location","reload","allReceiptsSidebar","ref","initUri","createHttpLink","authLink","setContext","_","_ref","headers","token","objectSpread","Authorization","concat","link","cache","InMemoryCache","ApolloT","addReceipt","LoginUser","sendLogin","loginDamnUser","setItem","loginUser","accessToken","LoginApollo","loginUserComp","MainPage","Routes","BrowserRouter","Switch","Route","path","exact","component","Boolean","hostname","match","ReactDOM","render","src_Routes","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89b50d56.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport \"./App.css\";\r\n\r\nclass MyNav extends Component{\r\n  render(){\r\n    return(\r\n        <nav >\r\n        <h2>ReceiptsPro</h2>\r\n        <ul className = \"navBar\">\r\n          <li><a href = \"/\">Main</a></li>\r\n          <li><a href = \"/MyReceipts\">My receipts</a></li>\r\n          <li><a href = \"/Signup\">Sign up</a></li>\r\n          <li id=\"lastBarLi\"><a href = \"/login\">Login</a></li>\r\n        </ul>\r\n        </nav>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyNav;\r\n","import {gql} from 'apollo-boost';\r\n\r\nconst signUpUs = gql`\r\n  mutation($email:String,$familyName:String, $name:String!, $password:String!){\r\n    CreateUser(\r\n      email:$email,\r\n      familyName:$familyName,\r\n      name:$name,\r\n      password:$password\r\n    ){\r\n      uuid\r\n    }\r\n  }\r\n`\r\n\r\nconst submitCCodeMutation = gql`\r\n  mutation($email:String,$confirmationCode:String){\r\n    ConfirmUserRegistration(\r\n      email:$email,\r\n      confirmationCode:$confirmationCode\r\n    )\r\n}\r\n`\r\nconst loginUs = gql`\r\n  mutation($email:String,$password:String){\r\n    loginUser(\r\n      email:$email,\r\n      password:$password\r\n    ){\r\n      accessToken\r\n      idToken\r\n    }\r\n  }\r\n`\r\nconst addReceiptMutation = gql`\r\n\r\n    mutation($date:Date!,$description:String,$imageUrl:String!,$item_name:String!,$cost:Int!) {\r\n      createReceipt(\r\n        date:$date,\r\n        description:$description,\r\n        imageUrl: $imageUrl,\r\n        itemName: $item_name,\r\n        price: $cost,\r\n\r\n      ){\r\n        uuid\r\n      }\r\n    }\r\n`\r\nconst showAllReceipts = gql`\r\n  {\r\n    ListCurrentUserReceipts{\r\n      date\r\n      description\r\n      imageUrl\r\n      itemName\r\n      price\r\n      uuid\r\n    }\r\n  }\r\n`\r\n\r\n\r\nexport {signUpUs,loginUs,addReceiptMutation,submitCCodeMutation,showAllReceipts};\r\n","import React, {Component} from 'react';\r\nimport {graphql} from 'react-apollo';\r\nimport './App.css';\r\nimport {submitCCodeMutation} from './queries/queries';\r\nclass ConfirmUs extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      code: \"\",\r\n      error:false\r\n    }\r\n  }\r\n  validateCode=(e)=>{\r\n    let inputCode = document.getElementById(\"inputCCode\");\r\n    if(inputCode.value<6){\r\n      inputCode.style.borderColor = \"red\"\r\n    } else {\r\n      inputCode.style.borderColor = \"#5ED50F\";\r\n      return true;\r\n    }\r\n  }\r\n  sendCode=(e)=>{\r\n    this.setState({error:false})\r\n    e.preventDefault();\r\n    if(this.validateCode()===true){\r\n      this.props.submitMutation({\r\n        variables: {\r\n          email: this.props.emailForCCode,\r\n          confirmationCode: this.state.code,\r\n        }\r\n      }).catch(err=>{\r\n          alert(err)\r\n          this.setState({error:true})\r\n      }).then(res=>{\r\n        if(!this.state.error){\r\n          this.props.history.push(\"/Login\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n      <div>\r\n        <form className='ConfirmForm' onSubmit= {this.sendCode}>\r\n          <div>\r\n            <span>Massage with a confirmation code was sent to your e-mail</span>\r\n            <br/>\r\n            <input id=\"inputCCode\"placeholder = \"Enter your confirmation code\" type='text' onChange = {(e) => this.setState({code: e.target.value})} onMouseOut = {this.validateCode}></input>\r\n            <br/>\r\n            <button id='submitCodeForm' >Submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\nexport default graphql (submitCCodeMutation,{name:'submitMutation'})(ConfirmUs);\r\n","import React, {Component} from 'react';\r\nimport {graphql} from 'react-apollo';\r\nimport './App.css';\r\nimport {signUpUs} from \"./queries/queries\";\r\nimport ConfirmUs from './confirmUser';\r\n\r\nclass CreateUser extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      email:\"\",\r\n      familyName:\"\",\r\n      name:\"\",\r\n      password:\"\",\r\n      signUpDone: false,\r\n      error:false,\r\n    };\r\n  };\r\n\r\n  validateName=(e)=>{\r\n    let errorSpan = document.getElementById(\"errorSpan\");\r\n    let inputName = document.getElementById(\"inputN\");\r\n    if(inputName.value<2){\r\n      errorSpan.style.visibility = 'visible';\r\n      inputName.style.borderColor = \"red\"\r\n      errorSpan.innerHTML = \"Name has to posess 2 or more symbols\"\r\n    } else {\r\n      inputName.style.borderColor = \"#5ED50F\";\r\n      return true;\r\n    }\r\n  }\r\n  validateMail=(e)=>{\r\n    let re = /[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}/igm;\r\n    let inputMail = document.getElementById(\"inputEmail\");\r\n    let errorSpan = document.getElementById(\"errorSpan\");\r\n    if(inputMail.value==='' || !re.test(inputMail.value)){\r\n      errorSpan.style.visibility = 'visible';\r\n      inputMail.style.borderColor = \"red\";\r\n      errorSpan.innerHTML = \"Email is incorrect\"\r\n    } else{\r\n\r\n        inputMail.style.borderColor = \"#5ED50F\";\r\n        return true;\r\n      }\r\n  }\r\n  validateFname=(e)=>{\r\n    let inputFname = document.getElementById(\"inputF\");\r\n    let errorSpan = document.getElementById(\"errorSpan\");\r\n    if(inputFname.value<2){\r\n      errorSpan.style.visibility = 'visible';\r\n      inputFname.style.borderColor = \"red\"\r\n      errorSpan.innerHTML = \"Family name has to posess 2 or more symbols\"\r\n    } else {\r\n      inputFname.style.borderColor = \"#5ED50F\";\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validatePass=(e)=>{\r\n    let inputPass = document.getElementById(\"inputPass\");\r\n    let errorSpan = document.getElementById(\"errorSpan\");\r\n    if(inputPass.value.length<6){\r\n      errorSpan.style.visibility = 'visible';\r\n      inputPass.style.borderColor = \"red\"\r\n      errorSpan.innerHTML = \"Password has to posess 6 or more symbols\";\r\n\r\n    } else {\r\n      inputPass.style.borderColor = \"#5ED50F\";\r\n      return true\r\n    }\r\n  }\r\n  validatePass1=(e)=>{\r\n    let inputPass = document.getElementById(\"inputPass\");\r\n    let inputPass1 = document.getElementById(\"inputPass1\");\r\n    let errorSpan = document.getElementById(\"errorSpan\");\r\n    if(inputPass1.value !== inputPass.value || inputPass1.value === \"\"){\r\n      errorSpan.style.visibility = 'visible';\r\n      inputPass.style.borderColor = \"red\"\r\n      inputPass1.style.borderColor = \"red\"\r\n      errorSpan.innerHTML = \"Passwords does not match\";\r\n    } else{\r\n      inputPass.style.borderColor = \"#5ED50F\";\r\n      inputPass1.style.borderColor = \"#5ED50F\";\r\n      return true\r\n    }\r\n  }\r\n  sendRegistration = (e) => {\r\n    let errorSpan = document.getElementById(\"errorSpan\")\r\n    errorSpan.style.visibility=\"hidden\";\r\n    e.preventDefault();\r\n    if(this.validateName()===true&&this.validateMail()===true&&this.validateFname()===true&&this.validatePass()===true&&this.validatePass1()===true){\r\n      this.props.createDamnUser({\r\n        variables: {\r\n          email: this.state.email,\r\n          familyName: this.state.familyName,\r\n          name:this.state.name,\r\n          password:this.state.password,\r\n        },\r\n      }).catch(err=>\r\n          {\r\n            alert(err)\r\n            this.setState({error:true})\r\n          }).then(\r\n            response=> {\r\n                if(!this.state.error){\r\n                  console.log(response.data.CreateUser.uuid)\r\n                  this.setState({signUpDone:true})\r\n                }\r\n            },\r\n          );\r\n      console.log(this.props);\r\n    }\r\n  }\r\n  CCRender=()=>{\r\n    if(this.state.signUpDone){\r\n      return <ConfirmUs emailForCCode = {this.state.email}/>\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <form className='SignUpForm' onSubmit= {this.sendRegistration}>\r\n          <div>\r\n            <input id=\"inputN\"placeholder = \"Enter your name\" type='text' onChange = {(e) => this.setState({name: e.target.value})} onMouseOut = {this.validateName}></input>\r\n            <br/>\r\n            <input id=\"inputF\"placeholder = \"Enter your family name\"type='text' onChange = {(e) => this.setState({familyName: e.target.value})} onMouseOut = {this.validateFname}></input>\r\n            <br/>\r\n            <input id=\"inputEmail\"placeholder = \"Enter your email\"type='email' onChange = {(e) => this.setState({email: e.target.value})} onMouseOut = {this.validateMail}></input>\r\n            <br/>\r\n            <input id=\"inputPass\"placeholder = \"Enter your password\"type='password' onChange = {(e) => this.setState({password: e.target.value})} onMouseOut = {this.validatePass}></input>\r\n            <br/>\r\n            <input id=\"inputPass1\"placeholder = \"Confirm your password\"type='password' onChange = {(e) => this.setState({itemName: e.target.value})} onMouseOut = {this.validatePass1}></input>\r\n            <br/>\r\n            <button id='submitSignForm' >Submit</button><p>Already have an account?</p><a href=\"/Login\">Login</a>  <span id='errorSpan'>Something is wrong</span>\r\n          <br/>\r\n          </div>\r\n        </form>\r\n        <div>{this.CCRender()}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default graphql (signUpUs, {name: \"createDamnUser\"})(CreateUser);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport MyNav from './navbar';\r\nimport CreateUser from './createUser';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\n\r\n\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://whopping-parched-xoloitzcuintli.gigalixirapp.com/\"\r\n});\r\nclass CreateUserApollo extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <ApolloProvider client = {client}>\r\n        <div className=\"App\">\r\n          <MyNav/>\r\n          <h2>Ez new PC</h2>\r\n          <br/>\r\n          <CreateUser history = {this.props.history}/>\r\n        </div>\r\n      </ApolloProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateUserApollo;\r\n","import React, {Component} from 'react';\r\nimport {graphql} from 'react-apollo';\r\nimport {showAllReceipts} from './queries/queries';\r\n\r\nclass SideBar extends Component {\r\n\r\n  showAllTitles=()=>{\r\n    this.props.showReceipts().then(res=> {\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      sortChecked:false\r\n    }\r\n  }\r\n\r\n  sortData=(dataToSort)=>{\r\n    return dataToSort.sort((a,b)=>{\r\n      return new Date(b.date) - new Date(a.date);\r\n    })\r\n  };\r\n\r\n\r\n  displayReceipts=(e)=>{\r\n    let myData = !this.state.sortChecked?this.props.showReceipts.ListCurrentUserReceipts:this.sortData(this.props.showReceipts.ListCurrentUserReceipts);\r\n    if(this.props.showReceipts.loading){\r\n      return (<div>Loading receipts...</div>)\r\n    } else if(myData){\r\n          let totalExp = 0;\r\n          let monthsExp = 0;\r\n          let d = new Date();\r\n          d.setMonth(d.getMonth()-1)\r\n          myData.forEach(e=>{\r\n            totalExp = e.price+totalExp;\r\n            if(new Date(e.date)>d){\r\n              monthsExp = e.price + monthsExp;\r\n            }\r\n\r\n          })\r\n          document.getElementById(\"expences\").innerHTML= \"Overall you spent \"+ totalExp;\r\n          document.getElementById(\"monthExp\").innerHTML= \"This month you spent \"+ monthsExp;\r\n          return myData.map((e,index)=>{\r\n          return <li value={index} key={index} onClick = {this.displayClickedRes}>{e.itemName}</li>\r\n        })\r\n    } else {\r\n        alert(\"You are not logged in\")\r\n        this.props.history.push(\"/Login\")\r\n    }\r\n  }\r\n  displayClickedRes=(ev)=>{\r\n    const data = this.props.showReceipts.ListCurrentUserReceipts\r\n\r\n    document.getElementById(\"receiptDetails\").style.visibility = \"visible\";\r\n    document.getElementById(\"Rprice\").innerHTML = data[ev.target.value].price\r\n    document.getElementById(\"Rdescription\").innerHTML = data[ev.target.value].description\r\n    document.getElementById(\"receiptPict\").src = data[ev.target.value].imageUrl\r\n    document.getElementById(\"Rdate\").innerHTML = data[ev.target.value].date\r\n    document.getElementById(\"itemName\").innerHTML = \"You bought \" + data[ev.target.value].itemName\r\n\r\n  }\r\n  closeDescription=()=>{\r\n    document.getElementById(\"receiptDetails\").style.visibility = \"hidden\"\r\n    let myData = this.props.showReceipts.ListCurrentUserReceipts;\r\n    const sortedData = myData.sort((a,b)=>{\r\n      return new Date(b.date) - new Date(a.date);\r\n    })\r\n    console.log(sortedData)\r\n  }\r\n// .then(this.setState({loadingOfReceipts:true}));\r\n  checkSorting=(e)=>{\r\n    console.log(e.target.checked)\r\n    this.setState({sortChecked:e.target.checked});\r\n    e.target.disabled=true;\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    return(\r\n      <div>\r\n          <div id=\"allReceiptsComp\">\r\n            <div id=\"receiptDetails\">\r\n              <h2 id=\"itemName\">Second div</h2>\r\n              <div id=\"expInfo\">\r\n                <p id=\"expences\">Your overall expences</p>\r\n                <p id=\"monthExp\">Your month expences</p>\r\n              </div>\r\n              <div id = 'wholeReceiptsInfo'>\r\n                <h4>Price</h4>\r\n                  <span id=\"Rprice\">..</span>\r\n                <h4>Description</h4>\r\n                <span id=\"Rdescription\">..</span>\r\n                <h4>Looks like</h4>\r\n                  <div id=\"imgContainer\">\r\n                    <img id = \"receiptPict\" src=\"https://tse3.mm.bing.net/th?id=OIP.ovbhqiA_tvBo8XWz6adbugHaHa&pid=Api&w=348&h=348&rs=1&p=0\" alt=\"receipt\"></img>\r\n                  </div>\r\n                <h4>Purchased</h4>\r\n                <span id=\"Rdate\"></span>\r\n                <br/>\r\n                <button id=\"ClosedDescription\" onClick={this.closeDescription}>Close</button>\r\n              </div>\r\n          </div>\r\n            <div id=\"sidebar\">\r\n              <h2>Your receipts:</h2>\r\n              <div id=\"checkBoxContainer\">\r\n                <input id=\"sort\" type=\"checkbox\" onChange={this.checkSorting}></input><label htmlFor=\"sort\">Sort by date</label>\r\n              </div>\r\n              <ul id = \"allReceipts\">\r\n                {this.displayReceipts()};\r\n              </ul>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default graphql (showAllReceipts, {name: \"showReceipts\"})(SideBar);\r\n","import React, {Component} from 'react';\r\nimport {graphql} from 'react-apollo';\r\nimport {addReceiptMutation} from './queries/queries';\r\nimport SideBar from './allReceiptsSidebar';\r\n\r\n\r\n\r\n\r\nclass CreateR extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      itemName: \"\",\r\n      price: \"\",\r\n      description: \"\",\r\n      imageUrl: \"\",\r\n\r\n\r\n    };\r\n  };\r\n\r\n\r\n\r\n\r\n  validateIname=(e)=>{\r\n    let inputName = document.getElementById(\"INamefield\");\r\n    let errorSpan = document.getElementById(\"errorSpan\");\r\n    if(inputName.value<2){\r\n      errorSpan.style.visibility = 'visible';\r\n      inputName.style.borderColor = \"red\"\r\n      errorSpan.innerHTML = \"Has to be at least two letters\";\r\n    } else{\r\n      inputName.style.borderColor = \"#5ED50F\";\r\n      return true\r\n    }\r\n  }\r\n  validateIprice=(e)=>{\r\n    let inputPrice = document.getElementById(\"Pricefield\");\r\n    let errorSpan = document.getElementById(\"errorSpan\");\r\n    if(!/^[0-9]+$/.test(inputPrice.value)){\r\n      errorSpan.style.visibility = 'visible';\r\n      inputPrice.style.borderColor = \"red\"\r\n      errorSpan.innerHTML = \"Price should contain only numeric characters\";\r\n    } else{\r\n      inputPrice.style.borderColor = \"#5ED50F\";\r\n      return true\r\n    }\r\n  }\r\n\r\n  validateUrl=(e)=>{\r\n    let strUrl = new RegExp('^(https?:\\\\/\\\\/)?'+\r\n  '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|'+\r\n  '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+\r\n  '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+\r\n  '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+\r\n  '(\\\\#[-a-z\\\\d_]*)?$','i');\r\n    let inputUrl = document.getElementById(\"Urlfield\");\r\n    let errorSpan = document.getElementById(\"errorSpan\");\r\n    if(!strUrl.test(inputUrl.value)){\r\n      errorSpan.style.visibility = 'visible';\r\n      inputUrl.style.borderColor = \"red\"\r\n      errorSpan.innerHTML = \"Has to be a URL adress\";\r\n    } else{\r\n      inputUrl.style.borderColor = \"#5ED50F\";\r\n      return true\r\n    }\r\n  }\r\n\r\n  getJWT=()=>{\r\n    return localStorage.getItem(\"my-jwt\");\r\n  }\r\n  submitReceiptForm = (e) =>{\r\n    const today = new Date();\r\n    const myDate = today.toISOString().substring(0, 10);\r\n    e.preventDefault();\r\n    if(this.validateIname()===true&&this.validateIprice()===true&&this.validateUrl()===true){\r\n      this.props.createReceipt({\r\n        variables: {\r\n          date:myDate,\r\n          description:this.state.description,\r\n          imageUrl: this.state.imageUrl,\r\n          item_name: this.state.itemName,\r\n          cost: parseInt(this.state.price),\r\n          submitReceiptDone: false,\r\n        }\r\n      }).catch(err=>{\r\n          alert(err);\r\n      }).then(res=> {\r\n          console.log(res);\r\n          this.setState({submitReceiptDone:true})\r\n          window.location.reload()\r\n         }\r\n    )\r\n      console.log(this.props);\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h2>Create your receipt</h2>\r\n        <form id=\"AddReceipt\" onSubmit = {this.submitReceiptForm}>\r\n          <div>\r\n            <label >Enter an item name</label>\r\n            <input id=\"INamefield\" type=\"text\" onMouseOut = {this.validateIname} onChange = {(e) => this.setState({itemName: e.target.value})}/>\r\n          </div>\r\n          <div>\r\n            <label >Enter its price</label>\r\n            <input id=\"Pricefield\" type=\"text\"  onMouseOut = {this.validateIprice} onChange = {(e) => this.setState({price: e.target.value})}/>\r\n          </div>\r\n          <div>\r\n            <label className=\"field\">Add a description</label>\r\n            <input id=\"Descfield\" type=\"text\" onChange = {(e) => this.setState({description: e.target.value})}/>\r\n          </div>\r\n          <div>\r\n            <label className=\"field\">Enter a url of your item</label>\r\n            <input id=\"Urlfield\" type=\"text\" onMouseOut = {this.validateUrl} onChange = {(e) => this.setState({imageUrl: e.target.value})}/>\r\n            <span id=\"errorSpan\">There is a mistake</span>\r\n          </div>\r\n          <br/>\r\n          <button>Add a receipt</button>\r\n        </form>\r\n        <SideBar history={this.props.history} ref=\"SideComp\"/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default graphql (addReceiptMutation, {name:\"createReceipt\"})(CreateR);\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport MyNav from './navbar'\r\nimport ApolloClient from 'apollo-client';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport CreateR from './addReceipt';\r\nimport {createHttpLink} from 'apollo-link-http';\r\nimport {setContext} from 'apollo-link-context';\r\nimport {InMemoryCache} from 'apollo-cache-inmemory';\r\n\r\n\r\nconst initUri = createHttpLink({ uri: \" https://whopping-parched-xoloitzcuintli.gigalixirapp.com/\"\r\n});\r\n\r\nconst authLink = setContext((_,{headers})=>{\r\n  const token = localStorage.getItem('my-jwt');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      Authorization: token ? `Bearer ${token}` : \"\",\r\n    }\r\n  }\r\n\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(initUri),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nclass ApolloT extends Component {\r\n  render(){\r\n    return(\r\n      <ApolloProvider client = {client}>\r\n        <div>\r\n          <MyNav/>\r\n          <br/>\r\n          <CreateR history={this.props.history}/>\r\n        </div>\r\n      </ApolloProvider>\r\n      );\r\n  }\r\n}\r\n\r\n\r\nexport default ApolloT;\r\n","import React, {Component} from 'react';\r\nimport {graphql} from 'react-apollo';\r\nimport {loginUs} from './queries/queries';\r\n\r\n\r\n\r\n\r\nclass LoginUser extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      error:false,\r\n    }\r\n  }\r\n\r\n  validateMail=(e)=>{\r\n    let re = /[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}/igm;\r\n    let inputMail = document.getElementById(\"inputEmail\");\r\n    let errorSpan = document.getElementById(\"errorSpan\");\r\n    if(inputMail.value==='' || !re.test(inputMail.value)){\r\n      errorSpan.style.visibility = \"visible\";\r\n      inputMail.style.borderColor = \"red\";\r\n      errorSpan.innerHTML = \"Email is incorrect\"\r\n    }else{\r\n        inputMail.style.borderColor = \"#5ED50F\";\r\n        return true;\r\n      }\r\n  }\r\n\r\n  validatePass=(e)=>{\r\n    let inputPass = document.getElementById(\"inputPass\");\r\n    let errorSpan = document.getElementById(\"errorSpan\");\r\n    if(inputPass.value.length<6){\r\n      errorSpan.style.visibility = \"visible\";\r\n      inputPass.style.borderColor = \"red\"\r\n      errorSpan.innerHTML = \"Password has to posess 6 or more symbols\";\r\n    } else{\r\n      inputPass.style.borderColor = \"#5ED50F\";\r\n      return true\r\n    }\r\n  }\r\n  sendLogin=(e)=>{\r\n    let errorSpan = document.getElementById(\"errorSpan\");\r\n    e.preventDefault()\r\n    if(this.validateMail()===true&&this.validatePass()===true){\r\n\r\n      this.setState({error:false})\r\n      this.props.loginDamnUser({\r\n        variables: {\r\n          email: this.state.email,\r\n          password: this.state.password\r\n        }\r\n      }).catch(err=>{\r\n          alert(err)\r\n          this.setState({error:true})\r\n          errorSpan.innerHTML = \"Login or password is incorrect\"\r\n         }).then(res=>{\r\n            console.log(res)\r\n            if(!this.state.error&&res.data){\r\n              console.log(res.data)\r\n              localStorage.setItem('my-jwt',res.data.loginUser.accessToken)\r\n              this.props.history.push('/MyReceipts')\r\n            }\r\n          }\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <br/>\r\n        <form className='SignUpForm' onSubmit= {this.sendLogin}>\r\n          <div>\r\n            <input id=\"inputEmail\"placeholder = \"Enter your email\"type='email' onChange = {(e) => this.setState({email: e.target.value})} onMouseOut = {this.validatePass}></input>\r\n            <br/>\r\n            <input id=\"inputPass\"placeholder = \"Enter your password\"type='password' onChange = {(e) => this.setState({password: e.target.value})} onMouseOut = {this.validateMail}></input>\r\n            <br/>\r\n            <button id='submitLoginForm' >Submit</button><p>Dont have an account?</p><a href=\"/Signup\">Create one</a>  <span id='errorSpan'>Here is a span</span>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default  graphql (loginUs, {name: 'loginDamnUser'})(LoginUser);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport MyNav from './navbar';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport LoginUser from './loginUserComp';\r\n\r\n\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://whopping-parched-xoloitzcuintli.gigalixirapp.com/\"\r\n});\r\nclass LoginApollo extends Component {\r\n  render(){\r\n    return(\r\n      <ApolloProvider client ={client}>\r\n        <div>\r\n          <MyNav/>\r\n          <LoginUser history={this.props.history} />\r\n        </div>\r\n      </ApolloProvider>\r\n    )\r\n  }\r\n}\r\nexport default LoginApollo;\r\n","import React, {Component} from 'react';\r\nimport MyNav from './navbar';\r\nclass MainPage extends Component {\r\n  render(){\r\n    return(\r\n      <div className=\"mainPageBackground\">\r\n        <MyNav/>\r\n        <br/>\r\n        <header className='mainHeader'>\r\n          <h1 className=\"mainHeader\">Wellcome to ReceiptsPro</h1>\r\n          <p>App for recording your receipts</p>\r\n          <button id='getStartedButt'><a href=\"/Signup\">Get Started</a></button>\r\n        </header>\r\n        <div id='mainMiddle'>\r\n\r\n            <div id=\"descriptionContainer\">\r\n              <h2>ReceiptsPro</h2>\r\n              <p>In order to proceed you should sign up first, by pressing the 'get started button'\r\n                or by clicking 'Sign in' on the navbar, then just log in using you email and password\r\n                after that you will be redirected to a page where you can create and observe receipts;\r\n              </p>\r\n            </div>\r\n          <div id=\"imgLogoContainer\">\r\n            <img src=\"https://t0.rbxcdn.com/276ff4919adca2f2f3f8c58285446f31\" alt=\"icon\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\nexport default MainPage;\r\n","import React, {Component} from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport CreateUserApollo from './createUserApollo';\r\nimport ApolloT from './ReceiptsApollo';\r\nimport LoginApollo from './loginApollo';\r\nimport MainPage from './mainPage';\r\nclass Routes extends Component {\r\n  render(){\r\n    return(\r\n      <BrowserRouter >\r\n        <Switch>\r\n          <Route path=\"/\" exact component={MainPage}/>\r\n          <Route path=\"/Signup\" exact component={CreateUserApollo}/>\r\n          <Route path=\"/MyReceipts\" exact component={ApolloT}/>\r\n          <Route path=\"/Login\" exact component={LoginApollo}/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Routes;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Routes from './Routes';\r\n//import App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Routes/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}